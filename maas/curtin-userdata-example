#!/bin/bash#012# vi: ts=4 expandtab syntax=sh#012MD5SUM='f0a92f7b7e961667d938e6acdbb54619'#012PREFIX='curtin'#012LABEL='curtin'#012COMMAND=( 'curtin' '--install-deps' 'install' '--config=configs/config-000.cfg' '--config=configs/config-001.cfg' '--config=configs/config-002.cfg' '--config=configs/config-003.cfg' '--config=configs/config-004.cfg' '--config=configs/config-005.cfg' '--config=configs/config-006.cfg' 'cp:///media/root-ro' )#012PYPATH='_pwd_'#012BINPATH='_pwd_/bin'#012CREATE_TIME='Fri, 29 Sep 2017 14:24:45 -0400'#012PAYLOAD_MARKER='_____PAYLOAD_____'#012VERBOSITY=0#012INFO_KEYS=("LABEL" "PREFIX" "COMMAND" "CREATE_TIME" "MD5SUM")#012#012error() { echo "$@" 1>&2; }#012fail() { [ $# -eq 0 ] || error "$@"; exit 1; }#012#012Usage() {#012    cat <<EOF#012Usage: ${0##*/} [ options ] [mode]#012#012   extract embedded archive#012#012   options:#012      -p | --prefix P    override extraction dir (default: $PREFIX)#012      -v | --verbose     be more verbose#012           --no-execute  extract only, do not execute any bundled command#012#012   mode is one of:#012     info:    dump information about archive#012     check:   check archive against expected checksum#012     dump:    dump archive to stdout#012     extract: extract the archive under $PREFIX (default mode)#012EOF#012}#012#012bad_Usage() { Usage 1>&2; [ $# -eq 0 ] || error "$@"; return 1; }#012#012debug() {#012    local level=${1}; shift;#012    [ "${level}" -gt "${VERBOSITY}" ] && return#012    error "${@}"#012}#012#012print_vars() {#012    local k karray t="" cur="" tic="'" repltic="'\''"#012    for k in "$@"; do#012        karray="$k[@]"#012        karray=( "${!karray}" )#012        if [ ${#karray[@]} -gt 1 ]; then#012            cur="("#012            for t in "${karray[@]}"; do#012                cur="${cur} '${t//${tic}/${repltic}}'"#012            done#012            cur="${cur} )"#012        else#012            t=${!k}#012            cur="'${t//${tic}/${repltic}}'"#012            #printf "%s=\"%s\"" "$k" "${t//'/'\''}"#012        fi#012        printf "%s=%s\n" "$k" "$cur"#012    done#012}#012#012dump_b64() {#012   sed -n "1,/^${PAYLOAD_MARKER}$/!p" "$1"#012}#012#012dump_bin() {#012    dump_b64 "$@" | base64 --decode#012}#012#012extract() {#012    mkdir "$2" || { error "failed to make '$2'"; return 1; }#012    dump_bin "$1" | tar -Sxzf - -C "$2"#012}#012#012main() {#012    local short_opts="hp:v"#012    local long_opts="help,no-execute,prefix:,verbose"#012    local getopt_out=$(getopt --name "${0##*/}" \#012        --options "${short_opts}" --long "${long_opts}" -- "$@") &&#012        eval set -- "${getopt_out}" ||#012        { bad_Usage; return; }#012#012    local cur="" next="" #012    local prefix="$PREFIX" execute=true#012#012    while [ $# -ne 0 ]; do#012        cur="$1"; next="$2";#012        case "$cur" in#012            -h|--help) Usage ; exit 0;;#012               --no-execute) execute=false;;#012            -p|--prefix) prefix="$next"; shift;;#012            -v|--verbose) VERBOSITY=$((${VERBOSITY}+1));;#012            --) shift; break;;#012        esac#012        shift;#012    done#012#012    [ $# -lt 2 ] || { bad_Usage "got $# args. expected only 1"; return; }#012    mode="$1"#012#012    case "${mode:-extract}" in#012        info) print_vars "${INFO_KEYS[@]}"; return;;#012        check)#012            found=$(dump_bin "$0" | md5sum) ||#012                { error "failed to calculate checksum"; return 1; }#012            found=${found%  -}#012            [ "$found" = "$MD5SUM" ] &&#012                error "found = expected = $found" && return 0#012            error "found = ${found}. expected = ${MD5SUM}"#012            return 1;;#012        dump) dump_bin "$0"; return;;#012        extract)#012            extract "$0" "$prefix" || { error "failed extraction"; return 1; }#012            if [ "${#COMMAND[@]}" = "1" -a -z "${COMMAND}" ]; then#012                error "extracted to '$PWD/$prefix'. no command to run."#012                return 0;#012            fi#012            if ! $execute; then#012                error "extracted to '$PWD/$prefix'. disabled command"#012                return 0;#012            fi#012            cd "$prefix" ||#012                { error "failed to change to $prefix"; return 1; }#012#012            local np=""#012            if [ -n "$PYPATH" ]; then#012                np="${PYPATH//_pwd_/$PWD}${PYTHONPATH:+:${PYTHONPATH}}"#012                export PYTHONPATH="$np"#012            fi#012#012            if [ -n "$BINPATH" ]; then#012                np="${BINPATH//_pwd_/$PWD}${PATH:+:${PATH}}"#012                export PATH="$np"#012            fi#012#012            debug 1 "executing: ${COMMAND[*]}"#012            exec "${COMMAND[@]}"#012            ;;#012    esac#012    #012    return 0#012}#012#012set -o pipefail#012main "$@"#012#012exit#012_____PAYLOAD_____#012H4sIAO2PzlkAA+w8aXPbNtP5rF+B0k4kpSJ1S7ZS5YnrOI3fpk7GdtJmHA+HIkGJNUWyBGlbTf3f#012310AvCT6SNo4PYRpIxJYLBZ7YRcErDUffPHSgjLs9/lvezAUv0PxK8uDdrc96PZbQwE3HPQHD0j/#012y5P24EHMIiMk5MHcMNhNcLe1/0OL1pw43hfWgU+Wf7vV66zlfy9FyN+Mw8jxvtQYt8i/228vy789#0126A8fkNaXIihf/uPy3/iGKwCbVd68774+7Og/7ewfjBWhEJrpz+eGZzFtbjiekoLsvtzb/TEFsmjA#012NHNGzbMU4s3745evD47Gmx+LFSNVCRbRzPe6I/GrXFVE0zLoVYLq+d73b3/IWvnrSG1dVSoWncTT#012Wp18rBBCTohShLlSyDdjorQUckr++IOENIpDj7QQlpozH8CfKaT99FGnclWxDcdFREstTwi9dCLS#012fkJgtA3i2GSzRRyG/yHPCHCGWE7oGXNa22zVm5rWnPtW7FLsxyLWINGMeiQIaUABVEzszc7xy8p8#012Af1gUq2HzcdXlTgQb7yW18BQfEK8ZmPzI4e4asKcYEowtkJUg6gWgPCWZjp1IZqHD7XHAHv6hBOA#012UyZyjJqJnThaIFchjx6R4MKqcxDTYBQaMzIV4ojOWB6PxFijx3+kD0ldnYyePMkg6zD/wA+j3IzH#012klIkNKkbfTvKDXalpAigcNkSxbAsx5uSquhcJZGfw1noQCQBlBlmxXYqgoXfENVLp1RkiO2ELNLp#012JR0rApHv2AzI3H9xpDwh8O9YGYmGCWXRuJU+5vuUaV2idMBa/RwAUfvwQT0XfWw/JAFwlmwWbeMJ#012sfx0RtLwiHoOIwQKedq06HnTi12XdJ4+agPOwuQ/JgzbDEbE8yNEHxjRDGZi+h4YaUxRiRPwE6L+#012ztmS0xlJcmKNAb5MQmqcpb38OAIFghZ1vtp5Uz8nqipsByms55DxGTx6dB3FaE9T37fIicBdRJ1g#0123nx8CrPhFOWnAnY93vxf+pohPdmEptMR2QSyM03ZECZt+hYlvk3aOHbsxYwaE5fm+IOdiUp/AwjO#012loSLeRaiZqVaJN1MTqtg0rlhZ850RkOQjaf+TkNfkHFuuDEFf+JZjmlElMz9kJLANWLmADkkZsbE#012cZ1okScMVZCobiRI5MRlWikYLTSWty9xXbIHHHdIvYjDjQRKPgcOa/memCa3gU00i0TZudak0NwH#012rTChSE/WVMlxLbVHZFmqJEUySkDTqaC/JornE+McnpBVYjX5HzkprBptbmycq45n+6cKegbJAxjI#012jEGm0xGRg6DufcgUG9bBD6DXj5UKguaBCjAK1/nK117HP7doTVBt25myL5gDfHr83+621vH/vZRM#012/uJXhXhcM+3pXzkGCnjQ610r/x60FeXf7XcH6/j/PorjwfxddwS+1fWnuu24dESa0TxoyhYNqqEx#0128ME5YysbkZPl9tMKhLh+yL0pwCKrRuQjKBSL5zTUz+hiRI5/oxdz87lhTV4d/v7ux92j8waBqDjw#012HQ/WoOosioJRs9kedrROV+ttaf1Rv9NrNX/a2TlqzmlkWEZkNGHEKGbNaDjoDofVBl8QIv+MemKM#012yZn94v9+HLz5JfbeXpo/vej82pDNjJqwHI7I4N3Wr9bgMqLdn7feTeJfwp8N+uJgPnxpX1oXv00G#012EuUiAC5c0MnM98+u/rG+/S6lxP5792z/7V6/vbb/r1Q8Gl344RmarVAAfFKJY43AOoN2Z5u1bJH7#012zA1Th3wspAyMu7c1svqj7vao1xu14XkoQKJ4RNr9luiAefEKFhZPYEg24i8qSRFmht9rNzs9GepZ#012HtMRDaPhOQ3R9ZzKlinEyxfGIt+x00+6CftFZ+GYOYMOZgsGgba7OsP27TPcun2G7bIZiqEhmYv5#012wDfR0inntdEbmYNRzx514cEa9W6kpHMdpz+RjhKOLNOxfRsdn82PZEjZJbcoCIzUCM1Z0oqGmUOU#012qQtUotI4vgcEVqSi68mWFnafxI4Li5ZQebGbxR8BVsU1R9azyJ//WxeBEv8/uG//D+H+qv/vrv3/#012fRTT9WMr8/w4S5XXqbKSx3ERxSBN2ci3fPAwJGN+HJp09MEjBEO15bDvg/TIH0rjvySu0+PQvXMM#012WG188DK0f3UAePXBU0QQiPtnEArTyGzyaYt/0TY0q7nd0pFVOq/TBUOw6SrhYY43OQ5Ws2rddXDz#0125YSzjZxWG3cbMENQGC6exF4Uq4z5heEKAqtIpjHPCAJg1kc6Nxzgu8KixYeJcpW035UUMaYOYwpS#012vrYqr8tnlBL/37pv/98ddNb+/yuVwICoJ4IYCXL30tiInIjAqEEmrm+e8bioIYOi0wr8GxpTupw+#012fJyG8US36LmD/i8KY9rgwSWzoO/ctyi4nVf+FAM+8s53YbloyNCRQwQRbsePyDSIGhDthY4B8INW#012q9/aoumWYZdObNvqmUZrq9XrtKx86m457KxBLhyeBsQBDTntV4K2hCw+lO0asMZNHJ/pSHNKpoqM#012aQNV8XxCQwggG8S3bYZLSK+93eu2et8Dac7vgKfd6m31h4Pv8wSkbE2owE3/svHzw3VyTEgr5Pid#012ZLROd7u/vTUcDtvd7c51Y8Yx4t3qDie9bctWJ1vDbbU36LVUIHSitiG77hmTbdukw2u5ZDOBlV5G#012vSUyddsP5waIxjUmKMnQ9+FFgCdNggJzq2tY7U5bNfpbXbXXgactg3ZUY9gxB/awM6HmtpjCOdeC#0123CCrzFoavEjS3IfFKF24Emp47VUxEfjaFvf3KiX+v3/f+7+t/nDF//daa/9/H+WMhh51RegfBPxz#0122Ec0mMAwz9CxE9fx4kt1Sj1ww+baeP5tpcT+2/ds/91+u+T7T39t//dRLDpBwUN+7FITgwf8ciM+#0124FRF8uh4TgQLdPbSzHJQBm4jhjBR9OaprMgir+vKk9UklVch7Yd0NArxjM/dkv9PwQ4JvwVpMASP#012LB3FN+Jopue3BMa37Qg8yvc5o4v
